[build-system]
requires = ["setuptools>=42.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "mcp-server-odoo"
version = "0.1.0"
description = "MCP server implementation for Odoo"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MPL-2.0"}
authors = [
    {name = "Andrey Ivanov", email = "ivnv.xd@gmail.com"}
]
keywords = ["odoo", "mcp", "ai", "model context protocol"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "License :: OSI Approved :: Mozilla Public License 2.0 (MPL 2.0)",
    "Operating System :: OS Independent",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries",
]
dependencies = [
    "python-dotenv>=1.0.0",
    "mcp>=0.1.0",
    "requests>=2.25.0"
]

[project.optional-dependencies]
dev = [
    "black>=23.0.0",
    "isort>=5.10.0",
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "mypy>=1.0.0",
    "ruff>=0.1.0"
]

[project.urls]
"Homepage" = "https://github.com/ivnvxd/mcp-server-odoo"
"Bug Tracker" = "https://github.com/ivnvxd/mcp-server-odoo/issues"
"Documentation" = "https://github.com/ivnvxd/mcp-server-odoo#readme"

[project.scripts]
mcp-server-odoo = "mcp_server_odoo.__main__:main"

[tool.setuptools]
packages = ["mcp_server_odoo"]

[tool.black]
line-length = 88
target-version = ["py310"]
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true

[tool.ruff]
line-length = 88
target-version = "py310"
select = ["E", "F", "B", "I"]
ignore = []

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::pytest.PytestDeprecationWarning",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests that require external services",
]

[tool.coverage.run]
omit = ["tests/*"]