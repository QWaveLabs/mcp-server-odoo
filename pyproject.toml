[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "mcp-server-odoo"
version = "0.1.0"
description = "A Model Context Protocol server for Odoo ERP systems"
readme = "README.md"
requires-python = ">=3.10"
authors = [
    { name = "Andrey Ivanov", email = "ivnv.xd@gmail.com" }
]
license = { text = "MPL-2.0" }
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Mozilla Public License 2.0 (MPL 2.0)",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "mcp>=1.0.0",
    "httpx>=0.27.0",
    "python-dotenv>=1.0.0",
    "pydantic>=2.0.0",
    "pydantic-settings>=2.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.24.0",
    "pytest-cov>=5.0.0",
    "mypy>=1.11.0",
    "ruff>=0.8.0",
    "black>=24.0.0",
]

[project.scripts]
mcp-server-odoo = "mcp_server_odoo.__main__:main"

[tool.hatch.build.targets.wheel]
packages = ["mcp_server_odoo"]

[tool.pytest.ini_options]
minversion = "8.0"
testpaths = ["tests"]
asyncio_mode = "auto"
pythonpath = ["."]

[tool.coverage.run]
source = ["mcp_server_odoo"]
omit = ["tests/*", "*/__pycache__/*", "*/__init__.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if __name__ == .__main__.:",
    "raise AssertionError",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_any_unimported = false
ignore_missing_imports = true

[tool.ruff]
line-length = 100
target-version = "py310"

[tool.ruff.lint]
select = ["E", "F", "I", "N", "W", "B", "Q"]
ignore = ["E501"]

[tool.black]
line-length = 100
target-version = ["py310"]